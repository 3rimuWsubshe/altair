name: Release

on:
  push:
    tags:
    - '**'

# TODO: Handle browser extension release
jobs:
  prepare-release:
    name: Prepare release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: release-draft
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.github_token }}
          prerelease: false
          draft: true
      - id: staging-pr
        uses: peter-evans/create-pull-request@v3
        with:
          branch: staging
          base: master
          title: Staging to master
    outputs:
      release-tag: ${{ steps.release-draft.outputs.automatic_releases_tag }}
      staging-pr-id: ${{ steps.staging-pr.outputs.pull-request-number }}
  electron:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [12.x]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn --frozen-lockfile
    - uses: nick-invision/retry@v2
      with:
        timeout_minutes: 15
        max_attempts: 3
        command: yarn lerna bootstrap
    - name: Install Snapcraft
      uses: samuelmeuli/action-snapcraft@v1
      if: startsWith(matrix.os, 'ubuntu')
      with:
        snapcraft_token: ${{ secrets.snap_store_login }}
    - name: Prepare for app notarization
      if: startsWith(matrix.os, 'macos')
      # Import Apple API key for app notarization on macOS
      run: |
        mkdir -p ~/private_keys/
        echo '${{ secrets.apple_api_key }}' > ~/private_keys/AuthKey_${{ secrets.apple_api_key_id }}.p8
    - name: Build/release Electron app
      uses: CryogenicPlanet/action-electron-builder@v2 # Using CryogenicPlanet until the main action adds skip_install
      with:
        github_token: ${{ secrets.github_token }}
        package_root: packages/altair-electron/
        skip_build: true
        skip_install: true
        mac_certs: ${{ secrets.mac_certs }}
        mac_certs_password: ${{ secrets.mac_certs_password }}
        args: '--publish always'
        max_attempts: 3
      env:
        # macOS notarization API key
        API_KEY_ID: ${{ secrets.apple_api_key_id }}
        API_KEY_ISSUER_ID: ${{ secrets.apple_api_key_issuer_id }}
  npm-publish:
    runs-on: ubuntu-latest
    needs: electron
    steps:
    - uses: actions/checkout@v2
    - name: Authenticate with Registry
      run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    - run: yarn --frozen-lockfile
    - uses: nick-invision/retry@v2
      with:
        timeout_minutes: 15
        max_attempts: 3
        command: yarn build:ci
    - run: yarn lerna publish from-git --force-publish=* --no-git-tag-version --no-push --yes
  publish-release:
    name: Publish release
    runs-on: ubuntu-latest
    needs: [prepare-release, electron]
    steps:
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.prepare-release.outputs.release-tag }}
      - uses: peter-evans/enable-pull-request-automerge@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          pull-request-number: ${{ needs.prepare-release.outputs.staging-pr-id }}
  deploy-docs:
    name: Deploy docs
    runs-on: ubuntu-latest
    needs: [publish-release]
    steps:
      - run: bin/deploy_docs.sh
  chrome-extension-upload:
    name: Publish webextension
    runs-on: ubuntu-latest
    needs: [deploy-docs]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Build extensions
      run: |
        yarn
        yarn lerna bootstrap
        yarn build-ext2
    - name: Upload & release
      uses: mnao305/chrome-extension-upload@1.1.1
      with:
        file-path: extension-builds/chrome-build/chrome.zip
        extension-id: flnheeellpciglgpaodhkhmapeljopja
        client-id: ${{ secrets.CHROME_CLIENT_ID }}
        client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
        refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
  # TODO: Publish browser extensions (mozilla, edge)
  # https://github.com/fregante/web-ext-submit
