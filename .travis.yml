sudo: required
language: node_js
cache: yarn
dist: xenial
os:
- linux
- osx
osx_image: xcode11
node_js:
- 12
addons:
  chrome: stable
services:
  - xvfb
before_install:
- curl -o- -L https://yarnpkg.com/install.sh | bash
- export PATH="$HOME/.yarn/bin:$PATH"
- export CHROME_BIN=/usr/bin/google-chrome
- export DISPLAY=:99.0
- if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then google-chrome --version; fi
before_script:
- yarn global add @angular/cli karma lerna surge
- yarn --frozen-lockfile
- npm config set //registry.npmjs.org/:_authToken=${NPM_TOKEN}
- yarn config set //registry.npmjs.org/:_authToken=${NPM_TOKEN}
# - echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" >> $HOME/.npmrc
script:
# - if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then yarn lerna bootstrap; yarn list --cwd packages/altair-electron; yarn lerna run --scope altair dev --stream; fi # Debugging electron test
- if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then yarn test:ci; fi # All other tests except e2e
- if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then yarn lerna run --scope altair-app webdriver-update-ci; yarn lerna run --scope altair-app e2e:ci; fi # Run e2e test
after_success:
  - if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then if [ ! -z "$SURGE_TOKEN" ]; then chmod ugo+x bin/surge_deploy.sh; bin/surge_deploy.sh; fi fi
before_deploy:
- if [ ! -z "$TRAVIS_TAG" ]; then yarn build-electron; fi
- if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then yarn build-app; fi # Need to generate files for deployment
- if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt update; sudo apt install snapd; fi # Workaround for snapd version
deploy:
- provider: releases
  api_key:
    secure: Raef82s/PIkWThnr5vxHsxZX7FI6LKB3dbUkHzEs/S88hhibQCLuUIrvtbPwEJ/nxj0tpnD93elRQWpYsFRa38omv11g0o5eSUy7WwEHEum6g6se1fH3DqhBJsnIJFtfNXwdysMuvzWeJQ4P4j37jSg3wuCs9oJn0I+GrtS/wrE8EyxGKjtd68lVZo5rNCllUiHeizl8oIcRTUREKexxpsLEapBqgxmkFDn7lbgLDgt4/VwtaCZVN6bAnjknJS9DMynOJS0S1uyl6Gqd1paHVvEPrJv/UpeGKsp+OyoU7qbt/0ZXqXd1Yyym5jp0NAdb2IVNUAiyAAMUjy0qYDIZJMLAOhoO/GlJjvr+Sun81Fgv3fTDPzdUkHLUOVAFqsAmqhkupdZ3PnbiPExk3M3vTIEYI6v2CdxEglZyuZ1GNZ1551CT2hddHuoGue3JGaeq/V8n7QGZUGdplw9NHr7YOkuGpbbxGDjJM/RQXXEdAj1YXTSe225NNEOjoY5AuaVnIW76pfzhjEZtAHCpiYDfqECjtQ9dNuV5K58qElfPmDlBjYv1/G46OiEb/wpFiXtNZel+pvYaV7EK0RNA5IYSUn/S5v2MHEd8XVS90KV2L+CFv++9M46le3Nx6Qr4Lbu7VeY3va7JA/FCN+6HWpoupCg4N98rNOgfjay6FO/d56c=
  file_glob: true
  file:
    - packages/altair-electron/out/make/*
  skip_cleanup: true
  on:
    tags: true
- provider: firebase
  token:
    secure: tgWQ77WjL/iWxY4mFmRsWG/w/Sk+szRVu99ynuT5Vjz7rSHkHsKhTrowTMAS7DV3Iq4yvSuVt2bPbiCYhANAiVixddA20BvoF5ZjGsafi5MXh0LPCrCXxbmsFmhp7MuQ5n94E800slGghtmRVPAwh1dlP/kpInwfqUY7RMcEQF+KFU/LVcec5hriCaDm1G4RQmaD6ZvkqUSTR0rqAh8fhPa/XXASrOdGOvU4O8oxOGP41ozF5n61KqYgWxst9Dwb/G0y7fZ1pomi30lAGWg5LodwHWOnkiOmN+bD0xDM9/D8OFAx9i/Afp1PnuGCA9EE0eI+oelnyZ4MSKPmgl20k6jrHpPgSziw2oKS8ceVYMa9dGHovVSmUmmBie93zBXF3mCf9zsv4WM7ekC9vv6C/P4K4MGeFSDIDscxbb7RYVaYto9UJMYDBz27dEsejSU4183fhKUS9KxnhVR0kZ/G45lPkORkDzdMPVMrRz6S1aL/fwMiNNjCsMWvVc5JDfozsIopiiAAtKbRp3apgxySktWkojfndX0BASyLyeSCG3p7enP/40OG7ikyDxMwxcVHZp9HMCnPxTkhdPAH2Dje1dweoWh6/sw8/7kjw2+X1WxuV1N5Wu9nB+vI7T6EMgxJZjTfN1fXSOGiKb/CVIDLb3jCpRJ/PIInXwsI43I+umY=
  message: Deploying to firebase.
  skip_cleanup: true
  on:
    branch: master
    condition: $TRAVIS_OS_NAME = linux
- provider: surge
  project: ./packages/altair-app/dist
  domain: altair-gql-translate.surge.sh
  skip_cleanup: true
  on:
    branch: staging
    condition: $TRAVIS_OS_NAME = linux
- provider: snap
  file_glob: true
  snap: packages/altair-electron/out/**/*.snap
  channel: stable
  # classic: true
  skip_cleanup: true
  on:
    tags: true
    condition: $TRAVIS_OS_NAME = linux
- provider: script
  script: git diff && sh bin/publish_packages.sh
  skip_cleanup: true
  on:
    tags: true
    condition: $TRAVIS_OS_NAME = linux
